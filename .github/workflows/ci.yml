name: CI

on: push

jobs:
  test:
    name: Tests

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['ubuntu-20.04']
        elixir: ['1.13.x']
        otp: ['24.x']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: build-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('lib/**/*.ex*') }}
          restore-keys: |
            build-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('lib/**/*.ex*') }}
            build-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: mix-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            mix-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
            mix-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Check formatting
        run: mix format --check-formatted

      - run: mix deps.get

      - run: mix deps.compile

      - name: Compile dev
        run: mix compile --warnings-as-errors

      - run: mix credo

      - name: Compile test
        run: MIX_ENV=test mix compile --warnings-as-errors

      - run: mix test

      # Don't cache PLTs based on mix.lock hash, as Dialyzer can incrementally update even old ones
      # Cache key based on Elixir & Erlang version (also useful when running in matrix)
      - name: Restore PLT cache
        uses: actions/cache@v2
        id: plt_cache
        with:
          key: |
            plt-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}
          restore-keys: |
            plt-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}
          path: |
            priv/plts

      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - run: mix dialyzer
